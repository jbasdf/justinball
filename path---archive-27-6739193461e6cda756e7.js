webpackJsonp([0xde31a5dcb680],{1070:function(e,t){e.exports={pathContext:{group:[{node:{excerpt:"When I first saw nested resources in this  REST paper  I thought cool that makes sense. So we started using the nested resource method in our projects. Then it got a bit wierd - like why should I have to do this/1/that/2/foo/3 if I want to get to foo. Why can't I just get to foo/3. Then I read that  Jamis felt the same way . Well crap. So then I fell in love with  Edge Rails and found out that the…",html:'<p>When I first saw nested resources in this <a href="http://www.b-simple.de/documents">REST paper</a> I thought cool that makes sense. So we started using the nested resource method in our projects. Then it got a bit wierd - like why should I have to do this/1/that/2/foo/3 if I want to get to foo. Why can\'t I just get to foo/3. Then I read that<a href="http://weblog.jamisbuck.org/2007/2/5/nesting-resources"> Jamis felt the same way</a>.</p>\n<p>Well crap.</p>\n<p>So then I fell in love with <a href="http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-restful-routing-updates">Edge Rails and found out that the :has_many and :has_one methods have found their way into routes</a>. (<a href="http://dev.rubyonrails.org/changeset/6588">Here\'s the change</a>.) This is very cool so I threw it in, but I could get the helper methods to work (stuff like entries_path(@feed) stopped working. I don\'t know why but I just have a heck of a time figuring out the helper methods, but they are worth using. For example future versions of Rails will replace \';\' with \'/\' in their restful routes. If you hard coded the \';\' you now have to go back and change it. You should have used the helper methods.\nAnyway, I found <a href="http://tuples.us/2007/05/02/changes-to-nested-resource-routes/">Changes to Nested Resource Routes</a> to be a grand helper when figuring out the new helper methods.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-06-05-changes-to-nested-routes-in-edge-rails/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/changes-to-nested-routes-in-edge-rails",date:"2007-06-05T06:00:00Z",title:"Changes to Nested Routes in Edge Rails",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Jamis Buck blogged about the code review of Ozmozr  he and  Marcel  did at the Mountain West Ruby Conference. The presentation was our favorite because of the insight it gave into our code and I think we came away as better programmers for it.  Here is the link to the presentation on Conference Freaks  and  if you want the source code they reviewed you can find it on Source Forge .",html:'<p><a href="http://weblog.jamisbuck.org/2007/5/29/jamis-and-marcel-at-mountainwest-rubyconf-2007">Jamis Buck blogged about the code review of Ozmozr</a> he and <a href="http://project.ioni.st/">Marcel</a> did at the Mountain West Ruby Conference. The presentation was our favorite because of the insight it gave into our code and I think we came away as better programmers for it. <a href="http://mtnwestrubyconf2007.confreaks.com/session10.html">Here is the link to the presentation on Conference Freaks</a> and <a href="http://sourceforge.net/project/showfiles.php?group_id=187808">if you want the source code they reviewed you can find it on Source Forge</a>.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-31-review-of-ozmozr-code-at-ruby-mountain-west-conference/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/review-of-ozmozr-code-at-ruby-mountain-west-conference",date:"2007-05-31T06:00:00Z",title:"Review of Ozmozr code at Ruby Mountain West Conference",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I have never ridden Logan Canyon. I was always to worried about traffic. We tried it today. It is a fun ride. The road follows the river up the canyon and there are plenty of trees that provide brief moments of shade. The ride up hurt a little bit, but on several sections we managed 23-25 mph. That should have told us something. I am not in good enough shape to ride that fast uphill. The ride back…",html:"<p>I have never ridden Logan Canyon. I was always to worried about traffic. We tried it today. It is a fun ride. The road follows the river up the canyon and there are plenty of trees that provide brief moments of shade. The ride up hurt a little bit, but on several sections we managed 23-25 mph. That should have told us something. I am not in good enough shape to ride that fast uphill. The ride back was fun. The wind that sent us up at higher speed slowed us down. It seems strange to only be able to do 20 on a downhill, but the wind seems to want to hold you in place - like the canyon has consumed you and is not going to puke you back out. So my mileage today should total somewhere around 44 miles. I have 14 commuting and 30 up and back with the canyon. I need to do more, but I'll do what I have time for. It is fun.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-30-logan-canyon/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/logan-canyon",date:"2007-05-30T06:00:00Z",title:"Logan Canyon",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I like how the title sounds so very spam like. I have lost 25 lbs since I started biking. 10 lbs in the past 2 months. So if you want to know my secret pay close attention: GET OFF YOUR FAT BUTT AND STOP EATING CRAPPY FOOD. That is yours for only $19.95 plus shipping and handling. But wait there's more. If you send me money now I will throw this in free: REALLY GET OF YOUR LAZY BUTT and stop…",html:"<p>I like how the title sounds so very spam like. I have lost 25 lbs since I started biking. 10 lbs in the past 2 months. So if you want to know my secret pay close attention:</p>\n<p>GET OFF YOUR FAT BUTT AND STOP EATING CRAPPY FOOD.</p>\n<p>That is yours for only $19.95 plus shipping and handling. But wait there's more. If you send me money now I will throw this in free:</p>\n<p>REALLY GET OF YOUR LAZY BUTT and stop surfing the internet.</p>\n<p>No gimics, no hype, no ongoing worries that your diet pill will cause you to drop dead from a heart attack any second. Science has actually shown that eating fewer calories than you burn will cause you to lose weight. Try it. Gas is $3.50 a gallon. Ride your bike to work and stop burning dead dinosaurs.</p>\n<p>My secret diet plan also comes with other benefits such as reduced risk of heart disease and diabetes.</p>\n<p>Try it right now, free for 30 days. Go to your local bike shop, buy one of those things with two wheels and start riding it. If you like it after 30 days feel free to send me a check and I will send you a big letter that says I told you so.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-30-want-to-lose-weight/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/want-to-lose-weight",date:"2007-05-30T06:00:00Z",title:"Want to lose weight?",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Bicycle ride quality is hard to describe, but is easy to feel when you are on a bike. With all the bikes I have ridden in the past few months I have made sure to include a couple of common riding challenges/issues. I made sure to hit pot holes. The roads around here have plenty of holes and the guy in front of you when you are in a pace line doesn't always see them or point them out. Everytime I…",html:"<p>Bicycle ride quality is hard to describe, but is easy to feel when you are on a bike. With all the bikes I have ridden in the past few months I have made sure to include a couple of common riding challenges/issues. I made sure to hit pot holes. The roads around here have plenty of holes and the guy in front of you when you are in a pace line doesn't always see them or point them out. Everytime I hit one it feels like a jolt of energy all the way up into my teeth. We ride canyons so hill climbing is a big deal. I tried sprinting to look for flex in the bottom bracket then I looked for chip sealed roads. The idea was to get an idea for vibration on both the large bumps and the constant smaller road noise. I was looking for both abrupt (the kind I can feel in my teeth) and constant energy transfer into my legs and lower back. My biggest complaint with my current bike (aluminum frame) is that the hard bumps feel like someone has punched me. The constant vibration is less noticable until I have been on the bike for a long time. The combination of the two contribute most to fatigue on my longer rides.</p>\n<p>Two bikes seemed to solve that problem for me - the <a href=\"http://www.time-sport.com/\">Time </a>and the <a href=\"http://www.calfeedesign.com/\">Calfee</a>. I rode a couple of Serotta bikes, a titanium Fierte and a full carbon HSG. I rode an Orbea Orca and I tried out a Cannondale System Six (with SRAM Force). The Orca was a disappointment. It looks cool, but the ride is not especially elegant. It is insane light and very stiff, but the dampening quality was nothing like the Time or the Calfee. The System Six was fun. If I limited myself to rides under 40 miles I might go with it just because it is fun. It didn't dampen the road as well as these other bikes, but it was stuff and it liked to go fast. The novelty of SRAM on the bike made my test ride all the more interesting. It is the kind of bike you like to date, but not one that you marry (I only get to buy one expensive bike so for me the bike choice is like marrage. However, I do live in Utah so multiple wives = multiple bikes? Anyway......).</p>\n<p>I have been talking with Craig Calfee over email. He is a great guy and is willing to answer customer emails. I had a chance to ride one of his bikes when I was in Portland (the low end Luna). I found it to be similar in comfort to the Time bikes. I like it a bit better than the Time bikes just because it is more unique. One other bike I am considering is a custom built ti bike from Karl Strong. Since it is custom I will never be able to ride it before I buy it so that one is a big debate for me. However, I have to believe that the custom model will fit perfectly. Everyone tells me he is a master at building frames. I worry that titanium won't dampen the road like carbon, but then I also worry that carbon won't last like titanium.</p>\n<p>There aren't many bikes that impress me any more. I did some research and found that <a href=\"http://allanti.com/page.cfm?PageID=328\">almost everything is made in Taiwan or China</a>. Time weaves their own carbon and then forms the tubes in house. I talked with Karl for about an hour. He is impressive. I would go with him before Serotta or Seven, because he is a one man shop (in Bozeman, Montana). He designs the bike and then welds it for you. I thought that was pretty cool. Calfee hand makes their bikes in California. Craig Calfee is a neat guy and everything I have read says that he is the master of carbon. He told me that he as fixed a lot of Orcas lately. If I had money to blow I would buy one of his bamboo bikes just for kicks.</p>\n<p>So what do I do? I keep waiting and thinking. Chosing a bike seems like a personal thing. Although there are some I love and hate I am sure others will have a different opinion (I don't imagine my dislike of the Orca will go over well with Orbea fans).</p>\n<p>In the mean time I have started debating buying a mountain bike and returning to the sport that I loved when I was a bit younger. Santa Cruz's Superlight is supposed to be a sweet ride. I used to think mountain biking was dangerous and that road biking is what you move to as you get older. In the past week I have read of two veloists being killed. <a href=\"http://www.ksl.com/index.php?nid=148&#x26;sid=1238285&#x26;comments=true\">One was in Sardine Canyon close to where I live</a>. My mother in law taught all of his kids. He was hit by a car. Then I read that the <a href=\"http://news.com.com/8301-10784_3-9723171-7.html?part=rss&#x26;subj=news&#x26;tag=2547-1_3-0-5\">former Altera CEO was killed while riding</a>. These kinds of things make me sad. They also make me wonder if the mountains wouldn't be a safer place to be.</p>\n<p>Anyway, hopefully I will stop whining about buying a bike soon and start posting my rides. We did Blacksmith fork last wednesday. That was 43 miles average speed was 20mph. I was pretty happy about that given the amount of uphill involved. I did a short 17 miles on sat and then 30 miles monday out to the west through the farms. Didn't ride today. We'll ride tomorrow at lunch.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-29-more-on-my-bike-dilema/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/more-on-my-bike-dilema",date:"2007-05-29T06:00:00Z",title:"More on my bike dilema",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I don't drink very much soda. It isn't healthy and I would rather eat the calories in the form of chocolate. Occasionally, I do drink a bit, but after  reading about how the sodium benzoate in soda destroys the mitoconhdria in your cells, and may \"lead to cirrhosis of the liver and degenerative diseases such as Parkinson's,\" I am pretty sure I will never drink the stuff again .",html:'<p>I don\'t drink very much soda. It isn\'t healthy and I would rather eat the calories in the form of chocolate. Occasionally, I do drink a bit, but after <a href="http://news.independent.co.uk/health/article2586652.ece">reading about how the sodium benzoate in soda destroys the mitoconhdria in your cells, and may "lead to cirrhosis of the liver and degenerative diseases such as Parkinson\'s," I am pretty sure I will never drink the stuff again</a>.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-29-soda-is-really-bad-for-you/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/soda-is-really-bad-for-you",date:"2007-05-29T06:00:00Z",title:"Soda Is Really Bad for You",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"We are looking at implementing OpenID in the Folksemantic applications at  COSL . I have been trying to figure out how to present this new technology to our users. Most people have been adding OpenID alongside their standard navigation.  DHH's plugin uses http:// to indicate OpenID using your current login form.   The password field disappears once the page notices that you are using http:// I…",html:'<p>We are looking at implementing OpenID in the Folksemantic applications at <a href="http://cosl.usu.edu">COSL</a>. I have been trying to figure out how to present this new technology to our users. Most people have been adding OpenID alongside their standard navigation. <a href="http://agilewebdevelopment.com/plugins/openidauthentication">DHH\'s plugin uses http:// to indicate OpenID using your current login form. </a> The password field disappears once the page notices that you are using http://</p>\n<p><a href="http://ma.gnolia.com/signin">I think I like the magnolia is doing it</a>. They make it clear that you are using OpenID and makes a quick case for signing up for an OpenID.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-25-how-to-do-openid/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/how-to-do-openid",date:"2007-05-25T06:00:00Z",title:"How to do OpenID",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"In a lot of my posts I said that I would link to the presentation. All the presentations can be found here: http://www.web2expo.com/pub/w/51/presentations.html My favorites from the current list are:\nBuilding Community-focused Apps with Rails\nScaling a Rails Application from the Bottom Up",html:'<p>In a lot of my posts I said that I would link to the presentation. All the presentations can be found here:</p>\n<p><a href="http://www.web2expo.com/pub/w/51/presentations.html">http://www.web2expo.com/pub/w/51/presentations.html</a></p>\n<p>My favorites from the current list are:\nBuilding Community-focused Apps with Rails\nScaling a Rails Application from the Bottom Up</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-22-presentations-from-rails-conf/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/presentations-from-rails-conf",date:"2007-05-22T06:00:00Z",title:"Presentations from Rails Conf",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Now that I am home and have managed to sleep a bit I have been thinking about my overall experience at Railsconf 2007. Overall it was great. It was fun to meet so many people working in Rails. The community is filled with friendly individuals who are willing to share everything they know or just sit an chat. I even managed to get in a fun game of chess on the giant board by the vendor booths. My…",html:"<p>Now that I am home and have managed to sleep a bit I have been thinking about my overall experience at Railsconf 2007. Overall it was great. It was fun to meet so many people working in Rails. The community is filled with friendly individuals who are willing to share everything they know or just sit an chat. I even managed to get in a fun game of chess on the giant board by the vendor booths.</p>\n<p>My favorite talks were the ones that included code. That is probably because I am a programmer, but somehow code makes the talk real. I went to a few talks that were explanations of processes. Those are OK, but they include a lot of common sense stuff that you will already know if you have been in the field for a few years. The very best talks were ones that included code and showed best practices. I don't want to be a Rails core team fan boy, but I love to hear Jamis Buck talk. He and Koz did a great job showing off the '<a href=\"http://www.therailsway.com/\">Rails Way</a>'. DHH's talk was great. He is a nice guy with great ideas and he is a good presenter. He deserves the credit he gets.</p>\n<p>The food at the conference sucked. Breakfast needs to be better. Lunch needs to be better.</p>\n<p>Rails Conf felt a little to corporate for a rebellious framework like Rails. Something more like <a href=\"http://iiw.windley.com/wiki/Workshop_2007\">IIW</a> would fit this community perfectly. Somehow O'Reilly manages to make their conferences a little to rock starish. However, O'Reilly support also shows the support and power behind Rails which is cool.</p>\n<p>I wouldn't attend the tutorials before the conference. They are pretty much an introduction to whatever topic they introduce.</p>\n<p>Overall the conference was enjoyable. I would probably go again. I look forward to more local Rails events. I think the community is growing and we should start seeing more regional conferences in the 50-150 person range.</p>\n<p>See you next year.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-21-rails-conf-after-thoughts/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/rails-conf-after-thoughts",date:"2007-05-21T06:00:00Z",title:"Rails Conf after thoughts",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I have been seriously investing a new road bike for a few months now. By serious I mean visiting a lot of bike shops, reading every forum I can find and posting questions to some very friendly communities. I have read up on as many manufacturers and their supply chains as possible. I can tell you where most of the bikes are sourced (hint: almost everything in your local bike shop is made in China…",html:"<p>I have been seriously investing a new road bike for a few months now. By serious I mean visiting a lot of bike shops, reading every forum I can find and posting questions to some very friendly communities. I have read up on as many manufacturers and their supply chains as possible. I can tell you where most of the bikes are sourced (hint: almost everything in your local bike shop is made in China or if you buy a more expensive bike Taiwan.) Trek makes their high end stuff in the US. Time makes their bikes in France by hand. They weave their own carbon. Pretty cool. Look has their own factory in Tunisia. Colnago does their high end stuff in Italy, but their low end comes from Asia.</p>\n<p>I have ridden as many bikes as possible and I have a stack of bike porn in my drawer that probably killed an entire forest. Shame on me.</p>\n<p>Someone has to do it.</p>\n<p>In my research I have settled three brands:\n<a href=\"http://www.calfeedesign.com/\">Calfee</a>\n<a href=\"http://www.strongframes.com/\">Strong</a>\n<a href=\"http://www.time-sport.com/\">Time</a></p>\n<p>Here's why</p>\n<p>Calfee because the ride is sweet. They are unique. Calfee only produces about 1000 frames a year so you know that in your local club ride it is not likely that anyone will have one. They are experts in carbon fiber. If your carbon fiber bike breaks Craig Calfee is one of the few guys that can fix it. This should tell you that he knows what he is doing. Did I mention the ride is sweet? I rode a Luna which is their low end frame and the ride was superior to many of the 5k bikes I have ridden. A Dragonfly will set you back $5-6000 depending on how you configure it. The paint job will run $200-300. If you have any questions Craig answers emails. He is a great guy.</p>\n<p>I have never ridden a Strong, but that is because you can't. Karl Strong custom welds you a bike. The process takes about 14 weeks, but you end up with a bike that fits you perfectly. You might ask why I don't include Serotta or Seven. I like the independent builders better. I would bet that Strong can build you every bit as good a bike as Serotta or Seven and he won't nickel and dime you. You get the best frame he can build period. Serotta seems to add 500-1000 bucks for every little change. Why is the Ottrott more than a Nove? It has something to do with a couple of welds and some materials. I am sure that yes the option costs more etc etc. However, it makes Serotta feel like GM. You want that extra xyz? You bet we can do that for another $500. Karl just builds you a bike. Besides I like supporting the small guys and he is in Bozeman, Montana so he is kind of local, sort of. Also, if you ever need to fix your bike Karl will do it for about $200 per tube. Not bad considering that you are a buying a top end frame. The other cool thing about Karl is that he guarantees you will like the bike. If you don't he'll fix it. He told me that in all the years of building he has only had to do this 5 or 6 times. That shows you how good he really is. For a top end build you can expect to pay about $5500. If you have any questions just call. Karl was totally find spending 45 minutes on the phone with me explaining his methods and the process. If you buy a bike from him you will have 6-7 interviews with Karl. He drafts up a blueprint for you to look over. Once you approve the bike he gets the parts together. After he starts your bike that is the only bike he works on until it is done. See if you get that kind of connection from Serotta or Seven. In all my research I have yet to find anyone that doesn't absolutely love their Strong.</p>\n<p>Time builds amazing bikes. They show up in the Tour de France. These guys weave their own carbon fiber. They then form the fiber into tubes and inject resin using a unique process called resin transfer moulding. That is pretty cool. I rode a Time VXR Proteam. It is a great bike. Very smooth over the bumps, but still responsive. It is not cheap. A top end bike will end up costing you around $6500 - 7000 depending on if you want Shimano or Campy and the wheels.</p>\n<p>If anyone has any input I would love to hear it. I plan I buying one of these in the next few months.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-21-i-love-calfee-bikes/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/i-love-calfee-bikes",date:"2007-05-21T06:00:00Z",title:"I love Calfee, Strong, and Time bikes",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Don't forget to look at  The Rails Way blog . Move logic into your model.  This lets you break functionality into more granular components and makes testing easier.  Keep your controllers skinny.   Jamis blogged about this principle here. Use before filters to setup state before your controller runs.  Use before_create in your models. ActiveSupport helps you make your code intention revealing…",html:'<p>Don\'t forget to look at <a href="http://www.therailsway.com/">The Rails Way blog</a>.</p>\n<p>Move logic into your model.  This lets you break functionality into more granular components and makes testing easier.  Keep your controllers skinny. <a href="http://weblog.jamisbuck.org/2006/10/18/skinny-controller-fat-model"> Jamis blogged about this principle here.</a></p>\n<p>Use before filters to setup state before your controller runs.  Use before_create in your models.</p>\n<p>ActiveSupport helps you make your code intention revealing.  Ruby code can be self documenting.</p>\n<p>has<em>many, belong</em>to makes your code powerful easy to use, but many users donâ€™t use the power of the associations.</p>\n<pre><code class="ruby">\nDocument.find_all_by_user_id(@john.id)\n\nvs\n\n@john.documents # this one hits the db once and then stores the objects in memory.  After the call you don\'t have to keep hitting the db.\n</pre></code>\n<p>You can do the same with</p>\n<pre><code class="ruby">\n @john.documents.find(:all, :conditions => ....\n</pre></code>\n<p>try this:</p>\n<pre><code class="ruby">\n@cool.documents.find_by_user_id(@john.id)\n</pre></code>\n<p>then define it as a method:</p>\n<pre><code class="ruby">\n@cool.documents_authored_by(@john.id)\n</pre></code>\n<p>just be sure to not duplicate the method in both the tags and authors models that is difficult to maintain.\nYou might prefer:</p>\n<pre><code class="ruby">\n@john.documents.tagged_with(@cool)\n</pre></code>\n<p>Don\'t use the \'!!\' idiom.  What you are doing is saying not not.</p>\n<pre><code class="ruby">\ndef account_code?\n  !!@account_code.nil? # will return false if account_code nil\nend\n</pre></code>\n<p>this is better</p>\n<pre><code class="ruby">\ndef account_code?\n  @account_code ? true : false\nend\n</pre></code>\n<p>or you can do this</p>\n<pre><code class="ruby">\n# make sure to document true because... false because...\ndef account_code?\n  if @account_code\n    true\n  else\n    false\n  end\nend\n</pre></code>\n<p>I\'m tired of typing code.  I\'ll post a link to the slides when they get them up.</p>\n<p>Simplify \'New\' for creating objects with associations by creating a method in your model called build with associations that does that work for you instead of creating a bunch of objects and then associating them in the controller</p>\n<p>Simplify your routes.  If you are pointing to the same controller all the time use <strong>with_options</strong></p>\n<p>you can make better urls like this</p>\n<pre><code class="ruby">\ndef to_param\n  "#{id}-#{name}"\nend\n\nfind(params[:id])\n</pre></code>\n<p>but you have to be careful in your controller to make sure that other methods work with params[:id]</p>\n<pre><code class="ruby">\nreturning new do |billable|\n  billable.contract = Contract.new\nend\n</pre></code>\n<p>is the same as</p>\n<pre><code class="ruby">\nbillable = new\nbillable.contract = Contract.new\nreturn billable\n</pre></code>\n<p>but looks cool</p>\n<p>How do you deal with validations when you have a lot of associations.  I have dealt with this and it sucks.  I have had to force the various objects to validate and then pull the errors into an error object then show the errors from that object.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-20-the-rails-way-jamis-buck-michael-koziarski/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/the-rails-way-jamis-buck-michael-koziarski",date:"2007-05-20T06:00:00Z",title:"The Rails Way Jamis Buck, Michael Koziarski",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Ferret is fast.  He has moved around and the documentation is a bit sparse.\nSolr was created by people at CNET, used by Internet Archive, Krugle, Revolution Health, his projects: Collext, Blacklight.\nFindability - serendipity is great.  You should be able to browse and discover stuff you didn't intend to.\nRead  Ambient Findability \nLucene is fast and scalable.  Written in Java.\nSolr is a layer on…",html:'<p>Ferret is fast.  He has moved around and the documentation is a bit sparse.\nSolr was created by people at CNET, used by Internet Archive, Krugle, Revolution Health, his projects: Collext, Blacklight.\nFindability - serendipity is great.  You should be able to browse and discover stuff you didn\'t intend to.\nRead <strong>Ambient Findability</strong>\nLucene is fast and scalable.  Written in Java.\nSolr is a layer on top of Lucene.\n<a href="http://wiki.apache.org/solr/Flare">Flare</a> is a plugin he wrote that is a bit of a hack but does "faceted browsing, auto-suggest, folksonomy tagging/annotating."\nAdds caching, replication, faceting, highlighting, spell checking, Http interface.\nYou can talk to it via Net::HTTP::Post or use solr-ruby (gem), <a href="http://acts_as_solr.railsfreaks.com/">acts<em>as</em>solr</a> (will hopefully use gem soon, Hatcher submitted a patch)</p>\n<pre><code class="ruby">\n  gem install solr-ruby\n</pre></code>\n<p>Look at the code in his slides.</p>\n<p>Luke is a tool that lets you view your lucene index.</p>\n<p>This is a pretty sweet tool for adding search to your site.  I plan on looking into it further.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-20-solr-on-rails-erik-hatcher/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/solr-on-rails-erik-hatcher",date:"2007-05-20T06:00:00Z",title:"Solr on Rails Erik Hatcher",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Practical Design for Developers David Verba Another standing room only session. Perhaps the organizers will wise up and have at least on larger room next year for the sessions that are very popular. We are going over the basics of audience analysis – understand your users:\nContext\nMotivations\nChallenges Know your stakeholders – anyone that has an interest in the project\nUnderstand your objectives…",html:"<p>Practical Design for Developers David Verba</p>\n<p>Another standing room only session. Perhaps the organizers will wise up and have at least on larger room next year for the sessions that are very popular.</p>\n<p>We are going over the basics of audience analysis – understand your users:\nContext\nMotivations\nChallenges</p>\n<p>Know your stakeholders – anyone that has an interest in the project\nUnderstand your objectives</p>\n<p>Maybe it is just me but this seems like webdesign 101 it is also the standard stuff you hear in a 9th grade English class. Know your users. Talk to them. Get the goals from everyone that has a stake the project etc.</p>\n<p>What is interesting to me is that he seems to imply that you can figure out your ‘users’ I have been reading Don’t Make Me Think. What is interesting is that Steve Krug the author says that there are no standard users of website. There are users and they frequently use your site in unique ways that the next user will not follow. That is one thing that makes the web a unique medium. Your users are not forced to sit and wait until after the next commercial so they can hear the news story they want. Instead they follow a non linear path of their own choosing.</p>\n<p>Here’s a good point from his talk:\nDon’t try to be everything to everybody. I think we know that, but it is so very easy to ignore that principle and say but this case is the exception. Before you know it you have a lot of exceptions and a bloated app with lots of useless features.</p>\n<p>Other than a few reiterations of common sense web design (and any other design, instructional, etc) this talk is not especially enlightening.</p>",
id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-19-practical-design-for-developers-david-verba/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/practical-design-for-developers-david-verba",date:"2007-05-19T06:00:00Z",title:"Practical Design for Developers David Verba",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I have eaten a lot of bad food over the past few days which is too bad given that Portland has good restaurants. The main source of bad food is the Rails conference.\nA WORD TO CONFERENCE ORGANIZERS:\nStale pastry and coffee do not count as breakfast.\nLunch is not much better.\nIt is so bad that we went to Denny's this morning. I was forced to debug my cereal - some kind of winged ant found its way…",html:"<p>I have eaten a lot of bad food over the past few days which is too bad given that Portland has good restaurants. The main source of bad food is the Rails conference.\nA WORD TO CONFERENCE ORGANIZERS:\nStale pastry and coffee do not count as breakfast.\nLunch is not much better.\nIt is so bad that we went to Denny's this morning. I was forced to debug my cereal - some kind of winged ant found its way into my raisin bran. Denny's food is just nasty.</p>\n<p>I like Japanese food so we went looking for a Japanese restaurant last night. When we saw the place we kept walking because it looked like it would be crap. Unfortunately, all the other places were full and we were running out of time so we went back. Bad choice. If you are in Portland do not eat at Koji OsaKaya. Their food is total crap.</p>\n<p>I have taken to eating granola bars and bananas. Does anyone have a decent recommendation for lunch?</p>\n<p>PS a special thanks goes out to <a href=\"http://www.thoughtworks.com/index.html\">thoughtworks</a> for supplying me with ALOT of granola bars.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-19-bad-food/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/bad-food",date:"2007-05-19T06:00:00Z",title:"Bad Food",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Saleh is talking about using a Daemon to get rails to talk to LDAP.   The code for the LDAP deamon and the code to make it look like a model live here .   I will add a bit of code here and there, but hopefully the presenter will upload the slides so I donâ€™t have to retype everything.  There is some great code in this presentation. Daemons are a bit of a dark art. or just use a gem You can…",html:"<p>Saleh is talking about using a Daemon to get rails to talk to LDAP.  <a href=\"http://thoughtbot.com/projects/ldap-ar-gateway\">The code for the LDAP deamon and the code to make it look like a model live here</a>.   I will add a bit of code here and there, but hopefully the presenter will upload the slides so I donâ€™t have to retype everything.  There is some great code in this presentation.</p>\n<p>Daemons are a bit of a dark art.</p>\n<pre><code class=\"ruby\">\ndef daemonize\n  Kernel.fork and Kernel.exit\n  Process.setsid\n  Kernel.fork and Kernel.exit\n  # system maintenance items so you don't hold up directory maintenance and so you don't have to deal with permissions\n  File.umask 0\n  Dir.chdir '/'\n  # you don't want to hold onto\n  ObjectSpace.each_object(IO) {|io| io.close rescue nil}\n  STIN.open('/dev/null')\nend\n</pre></code>\n<p>or just use a gem</p>\n<pre><code class=\"ruby\">\nrequire daemons\nDaemons.daemonize\n\nloop {\n  # or whatever\n  conn = accept\n}\n\n</pre></code>\n<p>You can interact directly with your Rails environment.\ninclude environment file</p>\n<p>Threads\nThreadsBase.allow_concurrency = true</p>\n<p>Or you will get a nasty error:\nMysql::Error: Lost connection to MySQL server during query:</p>\n<p>Start and Stop\nuse a unix init script that takes start/stop/restart\nOSX got ride of init script Solaris is going to do the same.  Use Launchd instead.  It uses xml.</p>\n<p>Make sure the process doesn't start twice so that it doesn't run over itself.\nUse a Pid File.   This is how the daemon finds out its own id for stopping.  It is also how you keep a process from starting up twice</p>\n<p>Configuration Files\nTalk to your process.  Configure with yml files.  Read it in with YAML.Load</p>\n<p>Logging\nDaemon doesnâ€™t have standard IO.  Log it.  Do it with Logger.new.  Set log levels etc.  Use logging for debugging.</p>\n<p>Security\nWhen the system boots all is root. You donâ€™t want your app running as root.  Drop privileges as soon as you can so that you become a lesser user.\ndef become_user( â€¦. See the slides</p>\n<p>Testing\nCreate a test suite.  Testing a daemon is challenging.  Spawn the daemon before tests.\nMocking makes testing safer.  See slides for code under slide Testing â€“ Mocking makes this much safer.</p>\n<p>This was a great talk with real code.  We need more code.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-19-taking-care-of-rails-support-tasks-through-custom-daemons-tammer-saleh/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/taking-care-of-rails-support-tasks-through-custom-daemons-tammer-saleh",date:"2007-05-19T06:00:00Z",title:"Taking Care of Rails Support Tasks Through Custom Daemons Tammer Saleh",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"I ended up with a major migraine yesterday towards the end of David Black’s talk so I didn’t get a chance to finish up the post. Don’t worry I probably won’t. My overall impression of the pre conference tutorials was that they were aimed at beginning users. If you have background in any of the topics then you might get a little value but 4 hours is a high price to pay for a little value. I was…",html:'<p>I ended up with a major migraine yesterday towards the end of David Black’s talk so I didn’t get a chance to finish up the post. Don’t worry I probably won’t.</p>\n<p>My overall impression of the pre conference tutorials was that they were aimed at beginning users. If you have background in any of the topics then you might get a little value but 4 hours is a high price to pay for a little value.</p>\n<p>I was originally critical of the first part of Jason Hoffman’s talk but last night I met some guys that really liked it. I guess it depends on what information you need. As a side note of all the talks yesterday Jason’s is a favorite. You can <a href="http://joyeur.com/2007/05/18/slides-for-my-railsconf-talk-scaling-a-rails-application-from-the-bottom-up">download the slides from his blog</a>. If you have to scale any kind of web application, not just Rails, download and look through his slides. There is information in there that would cost you a small fortune to research.</p>\n<p>We had time to chat with other developers from Utah last night. There are a decent number of guys in Utah working in either Ruby or Rails or both. We spent a few minutes talking about user groups and how they are and aren’t successful. We talked a bit about the Mountain West conference – mainly Chad Fowler’s talk. I’ll post about that in a minute. It was interesting to note that Carl Youngblood has moved to Surgeworks. He is the guy that gave Bayesian networks talk at the Mountain West Ruby conference.</p>\n<p>As a side note Portland offers some nice restaurants. We had some really good seafood last night. <a href="http://www.rivercitybicycles.com/">River City Bikes</a> is a pretty sweet bike shop and gave me the opportunity to try out a <a href="http://www.calfeedesign.com/">Calfee</a> which is just an awesome bike.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-18-rails-conf-day-one-impressions/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/rails-conf-day-one-impressions",date:"2007-05-18T06:00:00Z",title:"Rails Conf Day One Impressions",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"After the Two Revolutions session I had a few minutes to talk to DHH. First I must say he is just a very nice guy. Programmer envy over. I had a discussion about OpenID. It is going to be a critical component of the next rev of our apps. OpenID hasn’t reached a level where it has the same blessing as REST or Atom. David feels that these protocols have one and the Rails team is willing to throw…",html:"<p>After the Two Revolutions session I had a few minutes to talk to DHH. First I must say he is just a very nice guy. Programmer envy over. I had a discussion about OpenID. It is going to be a critical component of the next rev of our apps. OpenID hasn’t reached a level where it has the same blessing as REST or Atom. David feels that these protocols have one and the Rails team is willing to throw their weight behind them. OpenID will likely remain a plugin for now. After spending some time with the guys developing OpenID it was interesting to get DHH’s perspective. OpenID 2.0 is coming. It has more stuff. More features etc. DHH worries that it will detract from the simplicity.</p>\n<p>I also had a conversation about releasing code on edge Rails. 37signals has no problem with it at all. DHH told me to freeze a version, test that and then release. This is a bit of a mind shift from the big frameworks like .net or java. If you release on a beta of either of those you will get fired and maybe sued. Microsoft doesn’t let you release on their framework until they ship unless you are willing to accept a ‘go live’ license.</p>\n<p>The other thing we talked to him about was machine to machine authentication. They use basic http authentication over ssl (something DHH talked about in his keynote this morning). This is good to hear. We are working on a service that uses a REST API which will handle machine to machine authentication for all of our apps and which we plan to share with the world.</p>\n<p>Anyway if you see DHH he is a great guy, but then most everyone at this conference is. I reiterate that I disagree with Chad Fowler. The Rails community isn’t a bunch of arrogant jerks. This is a friendly open community that loves to share the Ruby love.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-18-openid-and-david-heinemeier-hansson/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/openid-and-david-heinemeier-hansson",date:"2007-05-18T06:00:00Z",title:"OpenID and David Heinemeier Hansson",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Sitting in the community app presentation right now. I was torn between this and the clean code presentation, but since we are building community apps this presentation seemed to be the most appropriate. Here's the first slide:\nFast prototyping\nPrototype becomes product\nHelp Developers and Designers work together. I am hoping it gets better and that the intro is just a quick run through the basics…",html:"<p>Sitting in the community app presentation right now. I was torn between this and the clean code presentation, but since we are building community apps this presentation seemed to be the most appropriate.</p>\n<p>Here's the first slide:\nFast prototyping\nPrototype becomes product\nHelp Developers and Designers work together.</p>\n<p>I am hoping it gets better and that the intro is just a quick run through the basics. If I end up in a bunch of sessions with nothing more than common sense, basic crap I will be pissed.</p>\n<p>Here are my scatterbrained notes:</p>\n<ul>\n<li>They developed <a href=\"http://corkd.com/\">cork'd</a> at night over a few months as a hobby. It cost a couple hundred bucks.</li>\n<li>Cork'd has been aquired.</li>\n<li>They had 500 users in the first 2-3 hours and now have about 20k users.</li>\n<li>Think of your efforts as a product. Keep the business in mind.</li>\n<li>Start small - their first web server was a Mac Mini</li>\n<li>Resist big infrastructure</li>\n<li>Build the right team that may or not be friends. Don't add to many people</li>\n<li>Determine ownership\n-- just my notes on the last two. They are critical. If you don't it will cost you a lot of money and you might lose friends.</li>\n<li>Have a revenue stream, ads don't count. Ask yourself will I charge users? Will I have a pro version?</li>\n<li>Focus on simplicity. Whatever you do do it well. Don't start with 50 features. Don't build features just because they are cool. Build simple interfaces.</li>\n<li>Don't release a public beta. I disagree with this one. I think the Rails framework is in many ways a public beta. Perhaps the perception of 'Beta' is just different.</li>\n<li>Know your audience and be your audience. I agree. If you use your app it is much more likely to be successful. If you are a user you will find the stuff that sucks.</li>\n<li>Rails plug component - he is happy to user Rails. It helps them etc etc. <img src=\"http://www.justinball.com/wp-includes/images/smilies/icon_smile.gif\" alt=\":-)\"></li>\n<li>Think like a designer. This is not an easy one for programmers. I have been reading various UI design books and finding content on the net. In the future you will find yourself doing both. Maybe we need a combined programmer/designer degree?</li>\n<li>Maximize your front page. All the important text should go 'above the fold' - think newspapers on the news stand. You only see the stuff above the fold. Put your important stuff at the top. Don't make the user scroll. Look at slideshowpro.com. They actually drew a line where they assume the fold is.</li>\n<li>Consider the data. Avoid big migrations.</li>\n<li>User-entered data == bad. At least for them. Users can't spell. They mis enter data. I would say if your app depends on the data being clean this might be true. However, for sites like Youtube and Myspace user entered data has worked pretty well. These guys are in a niche (wine) where clean data is important. I think that is because if people want general data google will get you in the right direction. However, once a user enters a site with a specific purpose they expect a higher level of accuracy. (They would just keep using Google otherwise). I think you see this with sites like Zillow. They have very specific metadata that simplifies the search. It would be interesting to investigate user behavior and expectations in different search contexts. I would guess that users tolerate detailed search in niche areas. When you search real estate don't you enter a lot of specific parameters ie square feet, location etc? On my <a href=\"http://www.theplancollection.com/\" title=\"The Plan Collection.com\">house plan website</a> we have a search that let's users enter very specific meta data and it works. People use it. If the data wasn't good and carefully controlled they would probably move on.</li>\n<li>Collaborate with other developers and collaborate in real time. This is how I and my partner work on <a href=\"http://www.theplancollection.com\" title=\"The Plan Collection.com\">our house plan site The Plan Collection</a>. Ironically, we live two houses from each other, but we meet to do business only on occasion.</li>\n<li>Don't repeat yourself. Use plugins or other services. Leverage existing applications.</li>\n<li>Take a break now and then</li>\n<li>Make Google your friend. Get links so people can find you.</li>\n<li>Leverage markup. Write good html. Google understands markup. Get the semantics right.</li>\n<li>Recruit users. Only ask for what is absolutely necessary. Make the signup easy to find. Make the signup clean.</li>\n<li>Give people that sign up extra value</li>\n<li>Get people to come back.</li>\n<li>Make frequent updates. At <a href=\"http://cosl.usu.edu/\">COSL</a> with the <a href=\"http://www.folksemantic.org/\">folksemantic tools</a> we are good at this. If you work there you know what I mean.</li>\n<li>Respond positively to your users.</li>\n<li>Share your API</li>\n<li>Find good partners - other companies in the same space. Find people that you can work with.</li>\n<li>If you do things right people won't know you've done anything at all. I agree here. Your software should not get in the way of the user's life. Instead it should enhance and/or simplify the user's life.</li>\n<li>just ship it. Pare it down and get it out the door. Released software beats vaporware.</li>\n</ul>\n<p>**Questions:\n**</p>\n<p>What were some of the most successful social features?\nThe beta was great for getting feedback from users. They added 'Drinking buddies'. People would want to see what their friends were drinking. They have RSS that outputs this data.</p>\n<p>What was the ratio of design to code?\nThey spent far more time on code than on design, but he has a great designer.</p>\n<p>One guy here doesn't like to keep the prototype. What are the implications of releasing on your prototype?\nThe continuing changes in Rails resulted in a lot of changes.</p>\n<p>How important was it that they like wine?\nThey weren't wine experts. Cork'd is now owned by wine experts. It is critical that you can keep up with the audience. You don't have to be the best domain expert, but you do need to understand the space.</p>\n<p>How did you deal with people gaming the system? They only had two problems. That was it.</p>",id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-18-building-community-focused-apps-with-rails-dan-benjamin/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/building-community-focused-apps-with-rails-dan-benjamin",date:"2007-05-18T06:00:00Z",title:"Building Community-focused Apps with Rails Dan Benjamin",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:'This session is totally packed. We managed to sneak in. The door guys don\'t like that much. If there is a fire we will all die. Adam Keys is funny and entertaining "If you want to learn from the masters you have to read their code."\nRead code because "you\'re surrounded by idiots." When you read Rails code start in the routes. You can look in the url to see where you are and then go to routes to…',html:'<p>This session is totally packed. We managed to sneak in. The door guys don\'t like that much. If there is a fire we will all die.</p>\n<p>Adam Keys is funny and entertaining</p>\n<p>"If you want to learn from the masters you have to read their code."\nRead code because "you\'re surrounded by idiots."</p>\n<p>When you read Rails code start in the routes. You can look in the url to see where you are and then go to routes to figure out where the code is.</p>\n<p>He is giving ideas for where to start and which parts of the app you should look at.</p>\n<p>My complaint about this conference is still that the sessions aren\'t as advanced as I would like. I would love to see a session like we had at the Mountain West Ruby conference. Jamis Buck and Marcel Molina Jr. went through some code in front of everyone (our <a href="http://www.ozmozr.com">ozmozr</a> code actually) and pointed out everything that was wrong. It was a great learning opportunity.</p>\n<p>The main point of this talk is basically that you should be taking commonly used, well developed code - plugins, rake, core Rails code etc and read through it. Seems obvious but it really does make sense.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-18-standing-on-the-shoulders-of-giants-adam-keys/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/standing-on-the-shoulders-of-giants-adam-keys",date:"2007-05-18T06:00:00Z",title:"Standing on the Shoulders of Giants Adam Keys",imageUrl:null,structuredHtml:null,image:null}}},{node:{excerpt:"Listening to DHH right now.  Play DHH buzzword bingo here.  http://bingdoh.com/games/dhh-keynote  He started out talking about the growth of the community and making fun of a job post requesting a Rails programmer with at least 3 years of Rails experience.  (That is longer than he has been on Rails and he invented it.) Now we are going into  Rails 2.0  information.  DHH is talking about namespaces…",html:'<p>Listening to DHH right now.  Play DHH buzzword bingo here. <a href="http://bingdoh.com/games/dhh-keynote">http://bingdoh.com/games/dhh-keynote</a> He started out talking about the growth of the community and making fun of a job post requesting a Rails programmer with at least 3 years of Rails experience.  (That is longer than he has been on Rails and he invented it.)</p>\n<p>Now we are going into <strong>Rails 2.0</strong> information.  DHH is talking about namespaces in routes.  DHH is now building a project.  Pretty cool for a keynote.  DHH showed of some of the new <strong>routing</strong> features.  Some example code looks like this:</p>\n<pre><code class="ruby">\nmap.namespace(:admin) do |admin|\n   admin.resources :products,\n \t:has_many => [ :tags, :images, :variants ]\nend\n</pre></code>\n<p>Yesterday I couldnâ€™t figure out why <strong>scaffold<em>resource</strong> wouldnâ€™t work on edge rails anymore.  Today I see why.  The â€˜generate resource</em>scaffoldâ€™ has been promoted to just â€˜generate <strong>scaffoldâ€™</strong>.  They are also getting rid of the .rhtml and .rxml formats in favor of html.erb and xml.erb.</p>\n<p> DHH is showing off a very cool feature of Rails which is the responds_to functionality.  This is one of my favorite features of the latest Rails.  It letâ€™s you do things like myobject, myobject.rss, myobject.xml and get back a representation of the object in those various formats.   We were doing multiple formats with scrumdidilymptio.us last year and had to write all the logic and views for each rss, rdf and html format.  This feature makes implementing stuff like that trivial.</p>\n<p>The introduction of REST into the heart of Rails means that implementing API services is very easy and almost free.  As you develop your app you also develop your API.  This is very slick.</p>\n<p>Active Web Service is no longer bundled with Rails (the REST stuff replaces it) Active Resource is now going to be embedded.  This means that SOAP is dropped from the core.  You can still use it by bringing in Active Web Service, but the Rails is pushing REST over SOAP and is sending that message.</p>\n<p>Having feeds is critical.  They want to make Atom native to Rails.  He thinks OpenID will be key.  Maybe not all applications need OpenID, but thinks that it will be a core component going forward.</p>\n<p>I like this.  We are moving all of our apps to OpenID.  I have a plugin that does OpenID.  I hope they show some action in this space.  I would love to see really good OpenID support.</p>\n<p>Breakpoints are bad.  1.8.5 broke them by fixing the bug that breakpoints depended on.  ruby-debug replaces it.  This is not new, but is good to see.  Ken</p>\n<p>DHH is addressing the fact that HTTP <strong>performance</strong> matters.  This is good.  You can factor out css and javascript into separate files is good for understanding.  However, in deployment it is better to have one javascript include and one css include.  Then zip it up.  Use the same include </p>\n<pre><code class="ruby">\n&lt;%= javascript_include_tag :all, :cache =&gt; true %&gt;.\n&lt;%= stylesheet_link_tag :all, :cache =&gt; true %&gt;\n</pre></code>\n<p>They found that http performance made the biggest difference.  This reduces the number of connections made to the server by the browser.</p>\n<p>He is showing that you can serve assets from other locations with a simple configuration.</p>\n<p>Hopefully he loads this code up so we can pull it down.  I canâ€™t type fast enough.</p>\n<p>They are adding query caching.  More performance goodness.</p>\n<p>Config/Initializers.  You can move code out of environment.rb and into a series of file that let you configure each item that needs to be configured into separate files.</p>\n<p>New migrations look like this:</p>\n<pre><code class="ruby">\nCreate_table :people do |t|\n  t.integer :account_id, other_int_column\n  t.string :stuff\nend\n</pre></code>\n<p>They switched the types and names so that you</p>\n<p>Added HTTP Authentication in.  This is very nice for machine authentication. Looks Like this:</p>\n<pre><code class="ruby">\nauthenticate_or_request_with_http_basic\n\nor\n\nauthenticate_with_http_basic\n</pre></code>\n<p>Rails guys prefer the MIT license.  Plugin generator assumes that you want to use the MIT license now so if you want something else you\'ll have to change it.</p>\n<p><strong>Spring Cleaning</strong>\nThey deprecated stuff so if you are getting warnings in your app expect those things to be removed in Rails 2.0.</p>',id:"/Users/jbasdf/projects/justinball/src/posts/2007-05-18-rails-conf-dhh-keynote/index.md absPath of file >>> MarkdownRemark",frontmatter:{templateKey:"blog-post",path:"/rails-conf-dhh-keynote",date:"2007-05-18T06:00:00Z",title:"Rails Conf DHH keynote",imageUrl:null,structuredHtml:null,image:null}}}],pathPrefix:"archive",first:!1,last:!1,index:27,pageCount:33}}}});
//# sourceMappingURL=path---archive-27-6739193461e6cda756e7.js.map