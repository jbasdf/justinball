webpackJsonp([46607849388200],{984:function(e,a){e.exports={data:{site:{siteMetadata:{title:"Justin Ball",author:"Justin Ball"}},markdownRemark:{id:"/Users/jbasdf/projects/justinball/src/posts/2017-11-28-Adding-GraphQL-to-our-REST-APIs/index.md absPath of file >>> MarkdownRemark",html:'<p>Rarely do we get to build applications from scratch. Rather, we frequently have to make improvements on existing systems. Coursera has built on their existing REST APIs. Here\'s how.</p>\n<div id="F329W0PR6ds" class="youtube-video">\n  <h2 class="youtube-title">Declarative GraphQL: Adding GraphQL to our REST APIs - Bryan Kane</h2>\n  <iframe src="https://www.youtube.com/embed/F329W0PR6ds" frameborder="0" width="640" height="385" allowfullscreen>\n    <p>Your browser does not support iframes.</p>\n  </iframe>\n  <p class="youtube-description">Coursera has over 500 REST APIs in production. We\'re all in on GraphQL, but given this scale, it would be impossible to build a schema and write 500 custom resolvers to handle each of our endpoints. Instead, we used information we already had about our APIs (which actions are available, and request and response formats) to automatically build GraphQL resolvers and add them all to a single, unified schema. We also created a structured way for developers to define relations between models, in both forward and reverse directions, which will enable almost all pages on Coursera to be loaded via a single GraphQL query.</p>\n</div>',frontmatter:{title:"Adding GraphQL to our REST APIs",date:"November 28, 2017",imageUrl:"https://img.youtube.com/vi/F329W0PR6ds/sddefault.jpg",image:null}}},pathContext:{path:"/Adding-GraphQL-to-our-REST-APIs"}}}});
//# sourceMappingURL=path---adding-graph-ql-to-our-rest-ap-is-cb463ad75ccc5bf1b4fc.js.map