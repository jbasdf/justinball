webpackJsonp([42272679528806],{1309:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Nobody Listens Anyway",author:"Justin Ball"}},markdownRemark:{id:"/Users/jbasdf/projects/justinball/src/posts/2013-10-23-rails-asset-pipeline-on-heroku-notes/index.md absPath of file >>> MarkdownRemark",html:"<h2>A tiny Rails asset pipeline thing if you are into bookmarklets</h2>\n<p>This is more a general Rails issue rather than a Heroku issue, but I ran into the problem while deploying to heroku so I'm including it.\nRails 3 generated digest as well as undigested version of your assets. Rails 4 no longer does that. For many applications that\ndoesn't matter but if you need to access your assets directly via file name it becomes a big problem. In my case I need\nto be able to access a javascript file for a bookmarklet. The proposed solution is that you put those kinds of files directly\ninto the public directly. However, I needed to make use of the asset pipeline to take advantage of Rails JST capabilities.\nIf you run into the same problem take a look at\n<a href=\"https://github.com/alexspeller/non-stupid-digest-assets\">Non-stupid non-digest assets in Rails 4 by Alex Speller.</a> It saved\nme a ton of time and fixed a major headache.</p>\n<h2>Just in case you want to be framed</h2>\n<p><a href=\"http://www.seanbehan.com/how-to-enable-iframe-support-on-heroku-with-ruby-on-rails-and-sinatra\">\n  It turns out that X-Frame-Options is set to 'SAMEORIGIN' by default in Rails 4. If you want your content to be framed then you'll need to set the headers:</a></p>\n<pre><code class=\"ruby\">\n  config.action_dispatch.default_headers = {\n    'X-Frame-Options' => 'ALLOWALL'\n  }\n</pre></code>",frontmatter:{title:"Rails on Heroku Notes - some Asset Pipeline and a Frame issue",date:"October 23, 2013",image:null}}},pathContext:{path:"/rails-asset-pipeline-on-heroku-notes"}}}});
//# sourceMappingURL=path---rails-asset-pipeline-on-heroku-notes-636652142c69dd99af6e.js.map