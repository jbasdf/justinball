{"version":3,"sources":["webpack:///path---rails-asset-pipeline-on-heroku-notes-89ae4e2fcfa467466bc6.js","webpack:///./.cache/json/rails-asset-pipeline-on-heroku-notes.json"],"names":["webpackJsonp","1373","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","imageUrl","image","pathContext","path"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,cAAAC,OAAA,gBAA8CC,gBAAmBC,GAAA,0IAAAC,KAAA,+3CAAogDC,aAAgCL,MAAA,gEAAAM,KAAA,mBAAAC,SAAA,KAAAC,MAAA,QAAiIC,aAAgBC,KAAA","file":"path---rails-asset-pipeline-on-heroku-notes-89ae4e2fcfa467466bc6.js","sourcesContent":["webpackJsonp([42272679528806],{\n\n/***/ 1373:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Justin Ball\",\"author\":\"Justin Ball\"}},\"markdownRemark\":{\"id\":\"/Users/jbasdf/projects/justinball/src/posts/2013-10-23-rails-asset-pipeline-on-heroku-notes/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>A tiny Rails asset pipeline thing if you are into bookmarklets</h2>\\n<p>This is more a general Rails issue rather than a Heroku issue, but I ran into the problem while deploying to heroku so I'm including it.\\nRails 3 generated digest as well as undigested version of your assets. Rails 4 no longer does that. For many applications that\\ndoesn't matter but if you need to access your assets directly via file name it becomes a big problem. In my case I need\\nto be able to access a javascript file for a bookmarklet. The proposed solution is that you put those kinds of files directly\\ninto the public directly. However, I needed to make use of the asset pipeline to take advantage of Rails JST capabilities.\\nIf you run into the same problem take a look at\\n<a href=\\\"https://github.com/alexspeller/non-stupid-digest-assets\\\">Non-stupid non-digest assets in Rails 4 by Alex Speller.</a> It saved\\nme a ton of time and fixed a major headache.</p>\\n<h2>Just in case you want to be framed</h2>\\n<p><a href=\\\"http://www.seanbehan.com/how-to-enable-iframe-support-on-heroku-with-ruby-on-rails-and-sinatra\\\">\\n  It turns out that X-Frame-Options is set to 'SAMEORIGIN' by default in Rails 4. If you want your content to be framed then you'll need to set the headers:</a></p>\\n<pre><code class=\\\"ruby\\\">\\n  config.action_dispatch.default_headers = {\\n    'X-Frame-Options' => 'ALLOWALL'\\n  }\\n</pre></code>\",\"frontmatter\":{\"title\":\"Rails on Heroku Notes - some Asset Pipeline and a Frame issue\",\"date\":\"October 23, 2013\",\"imageUrl\":null,\"image\":null}}},\"pathContext\":{\"path\":\"/rails-asset-pipeline-on-heroku-notes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---rails-asset-pipeline-on-heroku-notes-89ae4e2fcfa467466bc6.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Justin Ball\",\"author\":\"Justin Ball\"}},\"markdownRemark\":{\"id\":\"/Users/jbasdf/projects/justinball/src/posts/2013-10-23-rails-asset-pipeline-on-heroku-notes/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>A tiny Rails asset pipeline thing if you are into bookmarklets</h2>\\n<p>This is more a general Rails issue rather than a Heroku issue, but I ran into the problem while deploying to heroku so I'm including it.\\nRails 3 generated digest as well as undigested version of your assets. Rails 4 no longer does that. For many applications that\\ndoesn't matter but if you need to access your assets directly via file name it becomes a big problem. In my case I need\\nto be able to access a javascript file for a bookmarklet. The proposed solution is that you put those kinds of files directly\\ninto the public directly. However, I needed to make use of the asset pipeline to take advantage of Rails JST capabilities.\\nIf you run into the same problem take a look at\\n<a href=\\\"https://github.com/alexspeller/non-stupid-digest-assets\\\">Non-stupid non-digest assets in Rails 4 by Alex Speller.</a> It saved\\nme a ton of time and fixed a major headache.</p>\\n<h2>Just in case you want to be framed</h2>\\n<p><a href=\\\"http://www.seanbehan.com/how-to-enable-iframe-support-on-heroku-with-ruby-on-rails-and-sinatra\\\">\\n  It turns out that X-Frame-Options is set to 'SAMEORIGIN' by default in Rails 4. If you want your content to be framed then you'll need to set the headers:</a></p>\\n<pre><code class=\\\"ruby\\\">\\n  config.action_dispatch.default_headers = {\\n    'X-Frame-Options' => 'ALLOWALL'\\n  }\\n</pre></code>\",\"frontmatter\":{\"title\":\"Rails on Heroku Notes - some Asset Pipeline and a Frame issue\",\"date\":\"October 23, 2013\",\"imageUrl\":null,\"image\":null}}},\"pathContext\":{\"path\":\"/rails-asset-pipeline-on-heroku-notes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/rails-asset-pipeline-on-heroku-notes.json\n// module id = 1373\n// module chunks = 42272679528806"],"sourceRoot":""}